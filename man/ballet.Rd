% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ballet.R
\name{ballet}
\alias{ballet}
\title{ballet}
\usage{
ballet(.tbl, ..., .env = caller_env())
}
\arguments{
\item{.tbl}{A data frame}

\item{...}{Description of the columns to create, see \code{\link[=choreography]{choreography()}} for details.}

\item{.env}{parent environment of the function generated by \code{\link[=choreography]{choreography()}}}
}
\value{
a list of 2 elements
\itemize{
\item \code{ptypes} : a list of \code{n_moves} types, in the sense of the \code{.ptype} argument to \code{\link[vctrs:vec_c]{vctrs::vec_c()}}
\item \code{steps} : a list of \code{n_groups} results, each of size \code{n_moves}
}
}
\description{
\code{ballet()} iterates on the groups, as identified by \code{\link[dplyr:group_rows]{dplyr::group_rows()}}),
and applies the \code{\link[=choreography]{choreography()}} to each group.
}
\details{
The grouping structure of \code{.tbl} defines the number of groups \code{n_groups} and the
formulas in \code{...} gives the number of dance moves \code{n_moves}
}
\examples{
data <- iris \%>\%
  group_by(Species)

# most dance functions get the result of ballet()
# and then process it
c(ptypes, steps) \%<-\%
  ballet(data,
    Sepal.Length = ~mean(Sepal.Length),
    Sepal.Width  = ~mean(Sepal.Width)
  )
ptypes
steps

purrr::transpose(steps)
purrr::map_dbl(steps, 1)
purrr::map_dbl(steps, 2)

}
